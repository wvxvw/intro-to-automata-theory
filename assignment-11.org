# -*- fill-column: 80; org-confirm-babel-evaluate: nil -*-

#+TITLE:     Assignment 11, Authomata Theory
#+AUTHOR:    Oleg Sivokon
#+EMAIL:     olegsivokon@gmail.com
#+DATE:      <2015-09-04 Fri>
#+DESCRIPTION: First assignment in the course 20440 Automata and Formal Languages
#+KEYWORDS: Automata Theory, Formal Languages, Assignment
#+LANGUAGE: en
#+LaTeX_CLASS: article
#+LATEX_HEADER: \usepackage[usenames,dvipsnames]{color}
#+LATEX_HEADER: \usepackage{commath}
#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usetikzlibrary{shapes,backgrounds}
#+LATEX_HEADER: \usepackage{marginnote}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{enumerate}
#+LATEX_HEADER: \hypersetup{urlcolor=blue}
#+LATEX_HEADER: \hypersetup{colorlinks,urlcolor=blue}
#+LATEX_HEADER: \setlength{\parskip}{16pt plus 2pt minus 2pt}
#+LATEX_HEADER: \renewcommand{\arraystretch}{1.6}

#+BEGIN_SRC emacs-lisp :exports none
  (setq org-latex-pdf-process
          '("latexmk -pdflatex='pdflatex -shell-escape -interaction nonstopmode' -pdf -f %f")
          org-latex-listings t
          org-src-fontify-natively t
          org-latex-custom-lang-environments '((maxima "maxima"))
          org-listings-escape-inside '("(*@" . "@*)")
          org-babel-latex-htlatex "htlatex")
  (defmacro by-backend (&rest body)
      `(cl-case (when (boundp 'backend) (org-export-backend-name backend))
         ,@body))
#+END_SRC

#+RESULTS:
: by-backend

#+BEGIN_LATEX
\definecolor{codebg}{rgb}{0.96,0.99,0.8}
\definecolor{codestr}{rgb}{0.46,0.09,0.2}
\lstset{%
  backgroundcolor=\color{codebg},
  basicstyle=\ttfamily\scriptsize,
  breakatwhitespace=false,
  breaklines=false,
  captionpos=b,
  framexleftmargin=10pt,
  xleftmargin=10pt,
  framerule=0pt,
  frame=tb,
  keepspaces=true,
  keywordstyle=\color{blue},
  showspaces=false,
  showstringspaces=false,
  showtabs=false,
  stringstyle=\color{codestr},
  tabsize=2
}
\lstnewenvironment{maxima}{%
  \lstset{%
    backgroundcolor=\color{codebg},
    escapeinside={(*@}{@*)},
    aboveskip=20pt,
    captionpos=b,
    label=,
    caption=,
    showstringspaces=false,
    frame=single,
    framerule=0pt,
    basicstyle=\ttfamily\scriptsize,
    columns=fixed}}{}
}
\makeatletter
\newcommand{\verbatimfont}[1]{\renewcommand{\verbatim@font}{\ttfamily#1}}
\makeatother
\verbatimfont{\small}%
\clearpage
#+END_LATEX

* Problems

** Problem 1
   Given following languages over the alphabet $\{a, b\}$
   + $L_1 = \emptyset$.
   + $L_2 = \{\epsilon, aa\}$.
   + $L_3 = \{\epsilon, a, aa, ab, abb\}$.
   + $L_4 = \{aabb, aabbb, aa, aaa\}$.
   + $L_5 = \{\epsilon, b, bbb, abab, abba, aabb\}$.
   + $L_6 = \{\epsilon, bbbaa, baba, aaab, aabba, aa\}$.


   1. What are the following languages:
      + $L_4L_4$.
      + $(L_1 \cup L_2 \cup L_3)^R$.
      + $L_3L_1L_6$.

   2. Define exponentiation as follows:
      $L^K = \{x \in L \;|\; \exists y \in K.(\abs{y} = \abs{x})\}$.
      What are the languages $L_4^{L_5}$ and $L_6^{L_1}$.


   #+HEADER: :system swipl :exports both :results raw
   #+HEADER: :goal assignment_11a.
   #+BEGIN_SRC prolog
     :- use_module(library(lists)).

     concatentated_member(L1, L2, L3) :-
         member(M1, L1), member(M2, L2),
         string_concat(M1, M2, L3).

     concatentated(L1, L2, L3) :-
         findall(X, concatentated_member(L1, L2, X), X),
         list_to_set(X, L3).

     assignment_11a :-
         X = ["aabb", "aabbb", "aa", "aaa"],
         concatentated(X, X, Y),
         [First | Rest] = Y,
         write("$$\\{"),
         write(First),
         maplist(format(',\\allowbreak ~s'), Rest),
         write("\\}$$").
   #+END_SRC

*** Answer 1
    1. Concatenation of $L_4$ with itself gives:
       $L_4L_4 = \{aabbaabb, aabbaabbb, aabbaa,\;$ $aabbaaa, aabbbaabb,
       aabbbaa, aabbbaaa, aaaabbb, aaaa, aaaaa, aaaaabb, aaaaabbb\}$
    2. $(L_1 \cup L_2 \cup L_3)^R = \{\epsilon, a, aa, ba, bba\}$.
    3. $L_3L_1L_6 = \emptyset$.  This is so because there are no words
       in language $L_1$ to concatenate with.

*** Answer 2
    1. $L_4^{L_5} = \{aaa, aabb\}$.
    2. $L_6^{L_1} = \emptyset$.

** Problem 2
   Let $L_1, L_2$ and $L_3$ be languages over some alphabet $\Sigma$.
   Prove or disprove:
   1. $(L_1 \cup L_2) L_3 = L_1 L_3 \cup L_2 L_3$.
   2. $(L_1 \cap L_2) L_3 = L_1 L_3 \cap L_2 L_3$.

*** Answer 3
    First, I will prove $(L_1 \cup L_2) L_3 \subset L_1 L_3 \cup L_2 L_3$.
    Assume to the contrary that there is $w \in (L_1 \cup L_2) L_3$ which is not
    in $L_1 L_3 \cup L_2 L_3$.  Put $w = xy$ where $x \in (L_1 \cup L_2)$ and $y
    \in L_3$ (this implies $L_3 \neq \emptyset$ and at least one of $(L_1 \cup
    L_2) \neq \emptyset$.  Suppose $x$ comes from $L_1$, then it has to be in
    $L_1 L_3 \cup L_2 L_3$ because it is in L_1 L_3$, similartly if it originates
    in $L_2$.  Suppose now $L_3 = \emptyset$, then there is an empty set on
    both sides of equation (by definition of concatenation).  Suppose both $L_1$
    and $L_2$ are empty, then, again, we have emtpy set on both sides of the
    equation.  Thus we showed that it is impossible for $w$ not to be in the
    $L_1 L_3 \cup L_2 L_3$, hence the original argument must be true.

    Similarly, to prove $L_1 L_3 \cup L_2 L_3 \subset (L_1 \cup L_2) L_3$,
    assume there exists $w \in L_1 L_3 \cup L_2 L_3$, not a amember of $(L_1
    \cup L_2) L_3$.  Again, $w = xy$ where $y \in L_3$ and $x$ may be a
    member of $L_1$, $L_2$ or both.  Suppose, again, the sets aren't empty.
    If $w$ came from $L_1 L_3$, then $x$ came from $L_1$, but it is a member
    of $(L_1 \cup L_2)$ and similarly if it came from $L_2$.  Since $y \in L_3$
    and $L_3$ is present on both sides, it is not possible for $w$ to not
    be a member of $(L_1 \cup L_2) L_3$.  As in previous case, whenever $L_3$
    or $(L_1 \cup L_2)$ are empty, both sides of equation contain an empty set.
    Hence we proved both directions, hence the conjecture is true.

*** Anser 4
    This conjecture isn't generally true.  Suppose $L_1 = L_3 = \{a\}$ and
    $L_3 = \{\epsilon, aa\}$.  Then:

    1. $(L_1 \cap L_2) L_3 = \emptyset$.
    2. $L_1 L_3 \cap L_2 L_3 = \{aa\}$.

    I.e. both sides of equation are not equal.  This completes the proof.

** Problem 3
   An equivalence relation over $\Sigma^*$ will be called invariant from
   right if $\forall z \in \Sigma^*.(xRy \implies xzRyz)$.  Answer for
   every relation in $\{a, b\}^*$ whether the relation is an equivalence
   relation and whether it is invariant from right.

   1. $xRy \iff \abs{x} \geq \abs{y}$.
   2. $xRy \iff (\abs{x} = \abs{y} = 0 \lor x = qz, y = pz, \abs{z} \geq 1)$.

*** Answer 5
    Total order relation is not symmetric.  Suppose $x = a$ and $y = ab$, then
    $x \geq y$ but not $y \geq x$.  Since this relation is not an equivalence,
    it cannot be right invariant either.

*** Answer 6
    This relation is an equivalence.  It is transitive because whenever
    $x = qz$, $y = pz$ and $w = vz$, all of the below hold: $xRy$, $yRw$,
    $xRw$ since they all have the last letter in common.  This also holds
    trivially in case the length is zero, since $x = y = w = \epsilon$ in
    that case.

    The relation is reflexive because whenever every string is either
    empty or its last symbol is equal to itself, i.e. $xRx$ is always true.

    The relation is symmetric because whenever $x = qz$ and $y = pz$ then
    both $xRy$ and $yRx$ hold (again, becuase $x$ and $y$ have the final
    letter in common, or are both the empty string).

    The relation is also invariant from the right.  The proof will proceed
    by induction on the string's length.

    *Base step:* $\epsilon R \epsilon \implies \epsilon z R \epsilon z$ because
    $R$ is reflexive and $z = \epsilon z$.

    *Inductive step:* suppose the inductive hypotesis $xRy \implies xzRyz$, then
    suppose we concatenate the same character $c$ to both $x$ and $y$.  This
    character must be the same by definition of $R$.  Then $xcRyc \implies
    xczRycz$ because we can simply rename $xc = x_1$ adn $yc = y_1$ and obtain
    the inductive hypothesis restated using new terms: $x_1Ry_1 \implies
    x_1zRy_1z$.  This completes the inductive step, and hence the proof is
    completed.
